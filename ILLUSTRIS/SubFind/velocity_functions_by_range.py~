import sqlite3
import os
import sys
import numpy
import random
from numpy import * 
from numpy import linalg
import scipy
from scipy.optimize import brentq
import pylab as pl
import matplotlib.pyplot as plt
import matplotlib.mlab as mlab
import numpy as np
np.seterr(divide = 'ignore', invalid = 'ignore')

# Connecting to the database
conn = sqlite3.connect('../ILLUSTRIS.db')
c = conn.cursor()

# 2D array of velocities of satellites for each range
velocities = [[],[],[]]
labels = []
n_bins = int(sys.argv[1])

# Gather data for each range
for i in range(1,4):
	# Acquiring halos
	c.execute("SELECT Groups.GroupID, Groups.GroupNsubs, Groups.GroupFirstSub, GroupVel.X FROM (Range{index} INNER JOIN Groups ON Range{index}.GroupID = Groups.GroupID INNER JOIN GroupVel ON GroupVel.GroupID = Groups.GroupID)".format(index = i))
	Halos = c.fetchall()

	# Selecting random hosts
	RandomHosts = []
	for j in range(0,100):
		ind = np.random.choice(len(Halos))
		while Halos[ind] in RandomHosts:
			ind = np.random.choice(len(Halos))
		RandomHosts.append(Halos[ind])

	# Acquiring satellites of these random hosts
	for Halo in RandomHosts:
		GroupID = Halo[0]
		GroupNSubs = Halo[1]
		GroupFirstSub = Halo[2]
		GroupVelX = Halo[3]
		Satellites = range(GroupFirstSub, GroupFirstSub+GroupNSubs)
		for SatID in Satellites:
			# Adding satellite velocity to the 2D array
			c.execute("SELECT X FROM SubhaloVel WHERE SubhaloID = ?",(SatID,))
			SatVelX = c.fetchall()[0][0]
			velocities[i-1].append(SatVelX - HostVelX)
	# Create label for the plot	
	labels.append("Range {index}: $\mu =$ {mean}; $\sigma =$ {std}".format(index = i, mean = '%.3f'% mean(velocities[i-1]), std = '%.3f'% std(velocities[i-1])))

# Create the plot
fig, ax = plt.subplots()
n, bins, patches = ax.hist(velocities, n_bins, normed = 1, histtype = 'stepfilled', stacked = True, label = labels)
ax.set_xlabel('Vx (km/s) of satellites')
ax.set_ylabel('Probability')
plt.xlim([-200,200])
ax.legend(prop = {'size': 10})
ax.set_title('Velocity function of satellites in different stellar mass ranges')
plt.grid(True)
fig.set_size_inches(10,10)	
plt.savefig("SatVF_by_range.png")
plt.close()

